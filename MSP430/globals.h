/*
 * Written by: Garrett Smith
 * University of Florida: ECE Design II
 * Fall 2015
 */

#ifndef GLOBALS_H_
#define GLOBALS_H_

#ifdef MAIN_FILE

#include <stdint.h>
#define WAVE_ARRAY_START_INDEX 25
#define WAVE_ARRAY_END_INDEX 50
#define WAVE_ON_TIME 18   //18 = 10Hz
#define WAVE_OFF_TIME 192 //192 = 1Hz

/*
 * This is three instances of a 25 length arary (to minimize clock count in
 * output ISR).
 */
const int waveArray[75] = { 0x8000, 0x9fd4, 0xbda9, 0xd79e, 0xec12, 0xf9bb,
		0xffbe, 0xfdbb, 0xf3d0, 0xe29f, 0xcb3c, 0xaf1e, 0x900a, 0x6ff5, 0x50e1,
		0x34c3, 0x1d60, 0xc2f, 0x244, 0x41, 0x644, 0x13ed, 0x2861, 0x4256,
		0x602b, 0x8000, 0x9fd4, 0xbda9, 0xd79e, 0xec12, 0xf9bb, 0xffbe, 0xfdbb,
		0xf3d0, 0xe29f, 0xcb3c, 0xaf1e, 0x900a, 0x6ff5, 0x50e1, 0x34c3, 0x1d60,
		0xc2f, 0x244, 0x41, 0x644, 0x13ed, 0x2861, 0x4256, 0x602b, 0x8000,
		0x9fd4, 0xbda9, 0xd79e, 0xec12, 0xf9bb, 0xffbe, 0xfdbb, 0xf3d0, 0xe29f,
		0xcb3c, 0xaf1e, 0x900a, 0x6ff5, 0x50e1, 0x34c3, 0x1d60, 0xc2f, 0x244,
		0x41, 0x644, 0x13ed, 0x2861, 0x4256, 0x602b };

/*
 * This is the computed phase offset of each hydrophone for all values from 1
 * to 5 in x, y, and z axis. It also contains the angle of declination. Format
 * is as follows: aod(31 to 24) ranging from -90 to 90 in two's complement,
 * offs3(23 to 16) , offs2(15 to 8) offs3(7 to 0) all ranging from -24 to 24
 * offset index.
 */
const long int LUTArray[10][10][10] = { { {0xDD080800, 0xDA070601, 0xD7060402, 0xD5050203, 0xD4020002, 0xD40CFE09, 0xD50BFC06, 0xD70AFA04, 0xDA09F902, 0xDD08F800}, {0xE3090902, 0xE0090700, 0xDE070401, 0xDB050202, 0xDA030102, 0xDA0EFD08, 0xDB0DFB05, 0xDE0CF902, 0xE00BF800, 0xE309F702}, {0xE90A0A04, 0xE70A0802, 0xE5080500, 0xE3060301, 0xE2030101, 0xE211FD06, 0xE310FA03, 0xE50EF801, 0xE70CF603, 0xE90AF604}, {0xF00B0B07, 0xEF0B0905, 0xED0A0602, 0xEC070300, 0xEB040101, 0xEB14FC03, 0xEC12F901, 0xED10F704, 0xEF0DF506, 0xF00BF507}, {0xF80C0C0A, 0xF70C0907, 0xF60A0604, 0xF5080302, 0xF5050100, 0xF517FC01, 0xF514F805, 0xF611F608, 0xF70EF509, 0xF80CF40A}, {0x080C0CF6, 0x090C09F9, 0x0A0A06FC, 0x0B0803FE, 0x0B050100, 0x0B17FCFF, 0x0B14F8FB, 0x0A11F6F8, 0x090EF5F7, 0x080CF4F6}, {0x100B0BF9, 0x110B09FB, 0x130A06FE, 0x14070300, 0x150401FF, 0x1514FCFD, 0x1412F9FF, 0x1310F7FC, 0x110DF5FA, 0x100BF5F9}, {0x170A0AFC, 0x190A08FE, 0x1B080500, 0x1D0603FF, 0x1E0301FF, 0x1E11FDFA, 0x1D10FAFD, 0x1B0EF8FF, 0x190CF6FD, 0x170AF6FC}, {0x1D0909FE, 0x20090700, 0x220704FF, 0x250502FE, 0x260301FE, 0x260EFDF8, 0x250DFBFB, 0x220CF9FE, 0x200BF800, 0x1D09F7FE}, {0x23080800, 0x260706FF, 0x290604FE, 0x2B0502FD, 0x2C0200FE, 0x2C0CFEF7, 0x2B0BFCFA, 0x290AFAFC, 0x2609F9FE, 0x2308F800} },
		  { {0xDA070900, 0xD7070701, 0xD3060403, 0xD0040203, 0xCE020102, 0xCE09FE09, 0xD009FC06, 0xD308FA04, 0xD707F901, 0xDA06F900}, {0xE0080B02, 0xDD080800, 0xD9070502, 0xD6050303, 0xD4030102, 0xD40CFD08, 0xD60BFB05, 0xD909F902, 0xDD08F800, 0xE007F702}, {0xE70A0C05, 0xE4090903, 0xE1090600, 0xDE070302, 0xDC040102, 0xDC0FFD07, 0xDE0DFA03, 0xE10BF800, 0xE409F703, 0xE708F604}, {0xEF0B0D09, 0xED0B0B06, 0xEA0A0703, 0xE8080400, 0xE6050101, 0xE613FC04, 0xE810F801, 0xEA0DF604, 0xED0BF506, 0xEF09F507}, {0xF70B0E0C, 0xF60C0C09, 0xF50B0806, 0xF3090503, 0xF2050100, 0xF216FB01, 0xF313F706, 0xF50FF508, 0xF60CF409, 0xF709F40A}, {0x090B0EF4, 0x0A0C0CF7, 0x0B0B08FA, 0x0D0905FD, 0x0E050100, 0x0E16FBFF, 0x0D13F7FA, 0x0B0FF5F8, 0x0A0CF4F7, 0x0909F4F6}, {0x110B0DF7, 0x130B0BFA, 0x160A07FD, 0x18080400, 0x1A0501FF, 0x1A13FCFC, 0x1810F8FF, 0x160DF6FC, 0x130BF5FA, 0x1109F5F9}, {0x190A0CFB, 0x1C0909FD, 0x1F090600, 0x220703FE, 0x240401FE, 0x240FFDF9, 0x220DFAFD, 0x1F0BF800, 0x1C09F7FD, 0x1908F6FC}, {0x20080BFE, 0x23080800, 0x270705FE, 0x2A0503FD, 0x2C0301FE, 0x2C0CFDF8, 0x2A0BFBFB, 0x2709F9FE, 0x2308F800, 0x2007F7FE}, {0x26070900, 0x290707FF, 0x2D0604FD, 0x300402FD, 0x320201FE, 0x3209FEF7, 0x3009FCFA, 0x2D08FAFC, 0x2907F9FF, 0x2606F900} },
		  { {0xD7060A00, 0xD3060802, 0xCE050503, 0xCA040304, 0xC6020103, 0xC606FE08, 0xCA06FC06, 0xCE05FB03, 0xD304FA01, 0xD704FA00}, {0xDE070C03, 0xD9070900, 0xD5060602, 0xD0050303, 0xCC030103, 0xCC08FD08, 0xD007FB05, 0xD506FA02, 0xD905F900, 0xDE04F902}, {0xE5080E06, 0xE1080B03, 0xDD080800, 0xD8070402, 0xD5040103, 0xD50BFC07, 0xD80AFA03, 0xDD08F800, 0xE106F702, 0xE505F804}, {0xED09100A, 0xEA0A0D07, 0xE70A0A04, 0xE3090600, 0xE0050202, 0xE010FB04, 0xE30DF801, 0xE70AF604, 0xEA07F605, 0xED06F606}, {0xF60A110F, 0xF50B0F0C, 0xF30B0B08, 0xF00A0704, 0xEE070200, 0xEE14FA02, 0xF010F606, 0xF30BF508, 0xF508F509, 0xF606F609}, {0x0A0A11F1, 0x0B0B0FF4, 0x0D0B0BF8, 0x100A07FC, 0x12070200, 0x1214FAFE, 0x1010F6FA, 0x0D0BF5F8, 0x0B08F5F7, 0x0A06F6F7}, {0x130910F6, 0x160A0DF9, 0x190A0AFC, 0x1D090600, 0x200502FE, 0x2010FBFC, 0x1D0DF8FF, 0x190AF6FC, 0x1607F6FB, 0x1306F6FA}, {0x1B080EFA, 0x1F080BFD, 0x23080800, 0x280704FE, 0x2B0401FD, 0x2B0BFCF9, 0x280AFAFD, 0x2308F800, 0x1F06F7FE, 0x1B05F8FC}, {0x22070CFD, 0x27070900, 0x2B0606FE, 0x300503FD, 0x340301FD, 0x3408FDF8, 0x3007FBFB, 0x2B06FAFE, 0x2705F900, 0x2204F9FE}, {0x29060A00, 0x2D0608FE, 0x320505FD, 0x360403FC, 0x3A0201FD, 0x3A06FEF8, 0x3606FCFA, 0x3205FBFD, 0x2D04FAFF, 0x2904FA00} },
		  { {0xD5040B00, 0xD0040902, 0xCA040604, 0xC3030304, 0xBE020103, 0xBE03FE06, 0xC303FD04, 0xCA03FC02, 0xD002FC01, 0xD502FB00}, {0xDB050D03, 0xD6050B00, 0xD0050702, 0xC9040404, 0xC3020103, 0xC305FE07, 0xC904FC04, 0xD003FB02, 0xD603FB00, 0xDB02FB01}, {0xE3061007, 0xDE060D04, 0xD8060A01, 0xD1060603, 0xCB030203, 0xCB07FD07, 0xD106FA03, 0xD804F900, 0xDE03F902, 0xE303FA03}, {0xEC07120C, 0xE8081009, 0xE3080D05, 0xDD080801, 0xD6050303, 0xD60BFB05, 0xDD08F801, 0xE306F703, 0xE804F804, 0xEC03F905}, {0xF5081411, 0xF309130F, 0xF00A100B, 0xED0B0B06, 0xE8080400, 0xE810F902, 0xED0BF506, 0xF007F607, 0xF305F707, 0xF503F807}, {0x0B0814EF, 0x0D0913F1, 0x100A10F5, 0x130B0BFA, 0x18080400, 0x1810F9FE, 0x130BF5FA, 0x1007F6F9, 0x0D05F7F9, 0x0B03F8F9}, {0x140712F4, 0x180810F7, 0x1D080DFB, 0x230808FF, 0x2A0503FD, 0x2A0BFBFB, 0x2308F8FF, 0x1D06F7FD, 0x1804F8FC, 0x1403F9FB}, {0x1D0610F9, 0x22060DFC, 0x28060AFF, 0x2F0606FD, 0x350302FD, 0x3507FDF9, 0x2F06FAFD, 0x2804F900, 0x2203F9FE, 0x1D03FAFD}, {0x25050DFD, 0x2A050B00, 0x300507FE, 0x370404FC, 0x3D0201FD, 0x3D05FEF9, 0x3704FCFC, 0x3003FBFE, 0x2A03FB00, 0x2502FBFF}, {0x2B040B00, 0x300409FE, 0x360406FC, 0x3D0303FC, 0x420201FD, 0x4203FEFA, 0x3D03FDFC, 0x3603FCFE, 0x3002FCFF, 0x2B02FB00} },
		  { {0xD4020C00, 0xCE020902, 0xC6020604, 0xBE020305, 0xB6010104, 0xB601FF04, 0xBE01FE02, 0xC601FE01, 0xCE01FE01, 0xD400FE00}, {0xDA030E03, 0xD4030C01, 0xCC030802, 0xC3020504, 0xB9010104, 0xB901FF04, 0xC301FE02, 0xCC01FD01, 0xD401FD00, 0xDA01FD01}, {0xE2031108, 0xDC030F04, 0xD5040B01, 0xCB030703, 0xBF020204, 0xBF02FE04, 0xCB02FD02, 0xD501FC00, 0xDC01FC01, 0xE201FD01}, {0xEB04140D, 0xE604130A, 0xE0051006, 0xD6050B01, 0xC9040404, 0xC904FC04, 0xD603FB00, 0xE002FB02, 0xE601FB02, 0xEB01FC02}, {0xF5041713, 0xF2051611, 0xEE06140F, 0xE807100A, 0xDD080801, 0xDD08F801, 0xE804F804, 0xEE02F905, 0xF201FB04, 0xF501FB04}, {0x0B0417ED, 0x0E0516EF, 0x120614F1, 0x180710F6, 0x230808FF, 0x2308F8FF, 0x1804F8FC, 0x1202F9FB, 0x0E01FBFC, 0x0B01FBFC}, {0x150414F3, 0x1A0413F6, 0x200510FA, 0x2A050BFF, 0x370404FC, 0x3704FCFC, 0x2A03FB00, 0x2002FBFE, 0x1A01FBFE, 0x1501FCFE}, {0x1E0311F8, 0x24030FFC, 0x2B040BFF, 0x350307FD, 0x410202FC, 0x4102FEFC, 0x3502FDFE, 0x2B01FC00, 0x2401FCFF, 0x1E01FDFF}, {0x26030EFD, 0x2C030CFF, 0x340308FE, 0x3D0205FC, 0x470101FC, 0x4701FFFC, 0x3D01FEFE, 0x3401FDFF, 0x2C01FD00, 0x2601FDFF}, {0x2C020C00, 0x320209FE, 0x3A0206FC, 0x420203FB, 0x4A0101FC, 0x4A01FFFC, 0x4201FEFE, 0x3A01FEFF, 0x3201FEFF, 0x2C00FE00} },
		  { {0xD4000200, 0xCEFF0201, 0xC6FF0201, 0xBEFF0202, 0xB6FF0104, 0xB6FFFF04, 0xBEFEFD05, 0xC6FEFA04, 0xCEFDF703, 0xD4FDF400}, {0xDAFF0301, 0xD4FF0300, 0xCCFF0301, 0xC3FF0202, 0xB9FF0104, 0xB9FFFF04, 0xC3FEFB05, 0xCCFDF703, 0xD4FDF401, 0xDAFDF102}, {0xE2FF0301, 0xDCFF0401, 0xD5FF0400, 0xCBFE0402, 0xBFFE0205, 0xBFFEFE05, 0xCBFCF904, 0xD5FCF401, 0xDCFCF103, 0xE2FCEE06}, {0xEBFF0402, 0xE6FF0502, 0xE0FE0502, 0xD6FD0500, 0xC9FC0404, 0xC9FCFC04, 0xD6FAF501, 0xE0FAF004, 0xE6FBED08, 0xEBFBEC0B}, {0xF5FF0504, 0xF2FF0504, 0xEEFE0704, 0xE8FC0804, 0xDDF70901, 0xDDF7F701, 0xE8F7EF07, 0xEEF9EC0C, 0xF2FAEA0F, 0xF5FBE911}, {0x0BFF05FC, 0x0EFF05FC, 0x12FE07FC, 0x18FC08FC, 0x23F709FF, 0x23F7F7FF, 0x18F7EFF9, 0x12F9ECF4, 0x0EFAEAF1, 0x0BFBE9EF}, {0x15FF04FE, 0x1AFF05FE, 0x20FE05FE, 0x2AFD0500, 0x37FC04FC, 0x37FCFCFC, 0x2AFAF5FF, 0x20FAF0FC, 0x1AFBEDF8, 0x15FBECF5}, {0x1EFF03FF, 0x24FF04FF, 0x2BFF0400, 0x35FE04FE, 0x41FE02FB, 0x41FEFEFB, 0x35FCF9FC, 0x2BFCF4FF, 0x24FCF1FD, 0x1EFCEEFA}, {0x26FF03FF, 0x2CFF0300, 0x34FF03FF, 0x3DFF02FE, 0x47FF01FC, 0x47FFFFFC, 0x3DFEFBFB, 0x34FDF7FD, 0x2CFDF4FF, 0x26FDF1FE}, {0x2C000200, 0x32FF02FF, 0x3AFF02FF, 0x42FF02FE, 0x4AFF01FC, 0x4AFFFFFC, 0x42FEFDFB, 0x3AFEFAFC, 0x32FDF7FD, 0x2CFDF400} },
		  { {0xD5FE0500, 0xD0FE0401, 0xCAFD0403, 0xC3FD0305, 0xBEFD0207, 0xBEFEFF03, 0xC3FDFD05, 0xCAFCFA04, 0xD0FCF702, 0xD5FBF500}, {0xDBFE0501, 0xD6FD0500, 0xD0FD0502, 0xC9FC0404, 0xC3FB0207, 0xC3FEFF04, 0xC9FCFC04, 0xD0FBF803, 0xD6FAF500, 0xDBFAF202}, {0xE3FD0602, 0xDEFD0702, 0xD8FB0700, 0xD1FA0603, 0xCBF90407, 0xCBFCFE04, 0xD1FAFA03, 0xD8F9F601, 0xDEF9F203, 0xE3F9F006}, {0xECFD0704, 0xE8FC0804, 0xE3FA0903, 0xDDF80801, 0xD6F50606, 0xD6FBFD03, 0xDDF8F801, 0xE3F7F304, 0xE8F8F007, 0xECF8ED0A}, {0xF5FD0806, 0xF3FB0907, 0xF0F90B07, 0xEDF50B05, 0xE8EF0902, 0xE8F8FC00, 0xEDF5F505, 0xF0F5F00A, 0xF3F6ED0D, 0xF5F7EC10}, {0x0BFD08FA, 0x0DFB09F9, 0x10F90BF9, 0x13F50BFB, 0x18EF09FE, 0x18F8FC00, 0x13F5F5FB, 0x10F5F0F6, 0x0DF6EDF3, 0x0BF7ECF0}, {0x14FD07FC, 0x18FC08FC, 0x1DFA09FD, 0x23F808FF, 0x2AF506FA, 0x2AFBFDFD, 0x23F8F8FF, 0x1DF7F3FC, 0x18F8F0F9, 0x14F8EDF6}, {0x1DFD06FE, 0x22FD07FE, 0x28FB0700, 0x2FFA06FD, 0x35F904F9, 0x35FCFEFC, 0x2FFAFAFD, 0x28F9F6FF, 0x22F9F2FD, 0x1DF9F0FA}, {0x25FE05FF, 0x2AFD0500, 0x30FD05FE, 0x37FC04FC, 0x3DFB02F9, 0x3DFEFFFC, 0x37FCFCFC, 0x30FBF8FD, 0x2AFAF500, 0x25FAF2FE}, {0x2BFE0500, 0x30FE04FF, 0x36FD04FD, 0x3DFD03FB, 0x42FD02F9, 0x42FEFFFD, 0x3DFDFDFB, 0x36FCFAFC, 0x30FCF7FE, 0x2BFBF500} },
		  { {0xD7FC0600, 0xD3FC0602, 0xCEFB0504, 0xCAFA0406, 0xC6FA0209, 0xC6FEFF03, 0xCAFCFD04, 0xCEFBFB04, 0xD3FAF802, 0xD7FAF600}, {0xDEFC0701, 0xD9FB0700, 0xD5F90702, 0xD0F80505, 0xCCF70309, 0xCCFDFF03, 0xD0FBFD04, 0xD5F9F902, 0xD9F9F600, 0xDEF8F402}, {0xE5FB0903, 0xE1F90902, 0xDDF80800, 0xD8F60704, 0xD5F40408, 0xD5FCFF03, 0xD8F9FB02, 0xDDF8F800, 0xE1F7F402, 0xE5F7F205}, {0xEDFA0A06, 0xEAF80A05, 0xE7F60A03, 0xE3F30901, 0xE0F00606, 0xE0FBFE02, 0xE3F7FA00, 0xE7F6F603, 0xEAF6F206, 0xEDF6F009}, {0xF6FA0B08, 0xF5F70B08, 0xF3F40C07, 0xF0F00B04, 0xEEEC0702, 0xEEF9FE00, 0xF0F5F903, 0xF3F4F407, 0xF5F4F10B, 0xF6F5EE0D}, {0x0AFA0BF8, 0x0BF70BF8, 0x0DF40CF9, 0x10F00BFC, 0x12EC07FE, 0x12F9FE00, 0x10F5F9FD, 0x0DF4F4F9, 0x0BF4F1F5, 0x0AF5EEF3}, {0x13FA0AFA, 0x16F80AFB, 0x19F60AFD, 0x1DF309FF, 0x20F006FA, 0x20FBFEFE, 0x1DF7FA00, 0x19F6F6FD, 0x16F6F2FA, 0x13F6F0F7}, {0x1BFB09FD, 0x1FF909FE, 0x23F80800, 0x28F607FC, 0x2BF404F8, 0x2BFCFFFD, 0x28F9FBFE, 0x23F8F800, 0x1FF7F4FE, 0x1BF7F2FB}, {0x22FC07FF, 0x27FB0700, 0x2BF907FE, 0x30F805FB, 0x34F703F7, 0x34FDFFFD, 0x30FBFDFC, 0x2BF9F9FE, 0x27F9F600, 0x22F8F4FE}, {0x29FC0600, 0x2DFC06FE, 0x32FB05FC, 0x36FA04FA, 0x3AFA02F7, 0x3AFEFFFD, 0x36FCFDFC, 0x32FBFBFC, 0x2DFAF8FE, 0x29FAF600} },
		  { {0xDAFA0700, 0xD7F90702, 0xD3F80604, 0xD0F70407, 0xCEF7030A, 0xCEFEFF02, 0xD0FCFE03, 0xD3FAFC03, 0xD7F9F902, 0xDAF8F700}, {0xE0F90901, 0xDDF80800, 0xD9F60703, 0xD6F50606, 0xD4F40309, 0xD4FDFF02, 0xD6FBFD03, 0xD9F9FB02, 0xDDF8F800, 0xE0F7F502}, {0xE7F80A04, 0xE4F60A02, 0xE1F40900, 0xDEF20704, 0xDCF10408, 0xDCFCFF02, 0xDEF9FD02, 0xE1F7F900, 0xE4F6F602, 0xE7F6F404}, {0xEFF70B06, 0xEDF50B05, 0xEAF20A03, 0xE8F00801, 0xE6ED0506, 0xE6FBFF01, 0xE8F8FC00, 0xEAF6F802, 0xEDF5F505, 0xEFF5F208}, {0xF7F70C09, 0xF6F40C08, 0xF5F10C07, 0xF3ED0A04, 0xF2EA0601, 0xF2FBFF00, 0xF3F7FB02, 0xF5F5F705, 0xF6F4F408, 0xF7F4F10B}, {0x09F70CF7, 0x0AF40CF8, 0x0BF10CF9, 0x0DED0AFC, 0x0EEA06FF, 0x0EFBFF00, 0x0DF7FBFE, 0x0BF5F7FB, 0x0AF4F4F8, 0x09F4F1F5}, {0x11F70BFA, 0x13F50BFB, 0x16F20AFD, 0x18F008FF, 0x1AED05FA, 0x1AFBFFFF, 0x18F8FC00, 0x16F6F8FE, 0x13F5F5FB, 0x11F5F2F8}, {0x19F80AFC, 0x1CF60AFE, 0x1FF40900, 0x22F207FC, 0x24F104F8, 0x24FCFFFE, 0x22F9FDFE, 0x1FF7F900, 0x1CF6F6FE, 0x19F6F4FC}, {0x20F909FF, 0x23F80800, 0x27F607FD, 0x2AF506FA, 0x2CF403F7, 0x2CFDFFFE, 0x2AFBFDFD, 0x27F9FBFE, 0x23F8F800, 0x20F7F5FE}, {0x26FA0700, 0x29F907FE, 0x2DF806FC, 0x30F704F9, 0x32F703F6, 0x32FEFFFE, 0x30FCFEFD, 0x2DFAFCFD, 0x29F9F9FE, 0x26F8F700} },
		  { {0xDDF80800, 0xDAF70802, 0xD7F60604, 0xD5F50507, 0xD4F4030A, 0xD4FE0002, 0xD5FBFE03, 0xD7FAFC03, 0xDAF9FA02, 0xDDF8F800}, {0xE3F70902, 0xE0F50900, 0xDEF40803, 0xDBF20606, 0xDAF10309, 0xDAFDFF02, 0xDBFBFE02, 0xDEF9FC02, 0xE0F7F900, 0xE3F7F702}, {0xE9F60A04, 0xE7F40A02, 0xE5F20901, 0xE3F00704, 0xE2EE0408, 0xE2FDFF01, 0xE3FAFD01, 0xE5F7FB00, 0xE7F6F802, 0xE9F6F604}, {0xF0F50B06, 0xEFF20B05, 0xEDF00A03, 0xECED0801, 0xEBEC0505, 0xEBFCFF01, 0xECF9FD00, 0xEDF6FA02, 0xEFF5F704, 0xF0F5F506}, {0xF8F40C09, 0xF7F10C08, 0xF6EE0B06, 0xF5EC0903, 0xF5E90501, 0xF5FBFF00, 0xF5F8FD01, 0xF6F5FA04, 0xF7F4F707, 0xF8F4F409}, {0x08F40CF7, 0x09F10CF8, 0x0AEE0BFA, 0x0BEC09FD, 0x0BE905FF, 0x0BFBFF00, 0x0BF8FDFF, 0x0AF5FAFC, 0x09F4F7F9, 0x08F4F4F7}, {0x10F50BFA, 0x11F20BFB, 0x13F00AFD, 0x14ED08FF, 0x15EC05FB, 0x15FCFFFF, 0x14F9FD00, 0x13F6FAFE, 0x11F5F7FC, 0x10F5F5FA}, {0x17F60AFC, 0x19F40AFE, 0x1BF209FF, 0x1DF007FC, 0x1EEE04F8, 0x1EFDFFFF, 0x1DFAFDFF, 0x1BF7FB00, 0x19F6F8FE, 0x17F6F6FC}, {0x1DF709FE, 0x20F50900, 0x22F408FD, 0x25F206FA, 0x26F103F7, 0x26FDFFFE, 0x25FBFEFE, 0x22F9FCFE, 0x20F7F900, 0x1DF7F7FE}, {0x23F80800, 0x26F708FE, 0x29F606FC, 0x2BF505F9, 0x2CF403F6, 0x2CFE00FE, 0x2BFBFEFD, 0x29FAFCFD, 0x26F9FAFE, 0x23F8F800} } };

/*
 * This is the computed angle of arrival for the simulated hydrophone
 * location in degrees. Ranging from 0 to 359.
 */
const int LUTAngleArray[10][10][10] = { { {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087}, {0x00E1, 0x00E7, 0x00EF, 0x00F8, 0x0103, 0x00A9, 0x009E, 0x0095, 0x008D, 0x0087} },
		  { {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081}, {0x00DB, 0x00E1, 0x00E9, 0x00F3, 0x0100, 0x00A6, 0x0099, 0x008F, 0x0087, 0x0081} },
		  { {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079}, {0x00D3, 0x00D9, 0x00E1, 0x00EC, 0x00FC, 0x00A2, 0x0092, 0x0087, 0x007F, 0x0079} },
		  { {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070}, {0x00CA, 0x00CF, 0x00D6, 0x00E1, 0x00F3, 0x0099, 0x0087, 0x007C, 0x0075, 0x0070} },
		  { {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065}, {0x00BF, 0x00C2, 0x00C6, 0x00CF, 0x00E1, 0x0087, 0x0075, 0x006C, 0x0068, 0x0065} },
		  { {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B}, {0x0119, 0x011C, 0x0120, 0x0129, 0x013B, 0x002D, 0x001B, 0x0012, 0x000E, 0x000B} },
		  { {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016}, {0x0124, 0x0129, 0x0130, 0x013B, 0x014D, 0x003F, 0x002D, 0x0022, 0x001B, 0x0016} },
		  { {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F}, {0x012D, 0x0133, 0x013B, 0x0146, 0x0156, 0x0048, 0x0038, 0x002D, 0x0025, 0x001F} },
		  { {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027}, {0x0135, 0x013B, 0x0143, 0x014D, 0x015A, 0x004C, 0x003F, 0x0035, 0x002D, 0x0027} },
		  { {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D}, {0x013B, 0x0141, 0x0149, 0x0152, 0x015D, 0x004F, 0x0044, 0x003B, 0x0033, 0x002D} } };

unsigned int volatile counter = WAVE_ARRAY_START_INDEX;
int8_t volatile waveOffset1 = 0;
int8_t volatile waveOffset2 = 0;
int8_t volatile waveOffset3 = 0;
int8_t volatile angleOfDeclination = 0;
int volatile angleOfAttack = 0;
int volatile ADCValue1 = 0;
int volatile ADCValue2 = 0;
int volatile ADCValue3 = 0;
int volatile ADCValue4 = 0;

#else

#include <stdint.h>
#define WAVE_ARRAY_START_INDEX 25
#define WAVE_ARRAY_END_INDEX 50
#define WAVE_ON_TIME 18   //18 = 10Hz
#define WAVE_OFF_TIME 192 //192 = 1Hz

extern unsigned int volatile counter;
extern int8_t volatile waveOffset1;
extern int8_t volatile waveOffset2;
extern int8_t volatile waveOffset3;
extern int8_t volatile angleOfDeclination;
extern int volatile angleOfAttack;
extern int volatile ADCValue1;
extern int volatile ADCValue2;
extern int volatile ADCValue3;
extern int volatile ADCValue4;

#endif
#endif /* GLOBALS_H_ */
